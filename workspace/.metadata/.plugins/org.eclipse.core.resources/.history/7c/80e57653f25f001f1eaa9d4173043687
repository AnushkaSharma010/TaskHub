package com.project_task_hub.entity;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.CascadeType;
import jakarta.persistence.ElementCollection;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;



@Entity

public class Issues {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	
	private String title;
	
	private String description;
	
	private String status;
	
	private String priority;
	
	private Long projectID;
	
	private LocalDate dueDate;
	 @OneToMany
	private List<String> tags = new ArrayList<>();
	
	@OneToMany(mappedBy = "issue",cascade = CascadeType.ALL, orphanRemoval = true)
	private List<Comments> comments = new ArrayList<>();
	
	@ManyToOne
	private User assignee;
	
	@JsonIgnore
	@ManyToOne
	private Project project;
	
	@ManyToMany
	List<User> team = new ArrayList<>();

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public String getPriority() {
		return priority;
	}

	public void setPriority(String priority) {
		this.priority = priority;
	}

	public Long getProjectID() {
		return projectID;
	}

	public void setProjectID(Long projectID) {
		this.projectID = projectID;
	}

	public LocalDate getDueDate() {
		return dueDate;
	}

	public void setDueDate(LocalDate dueDate) {
		this.dueDate = dueDate;
	}

	public List<String> getTags() {
		return tags;
	}

	public void setTags(List<String> tags) {
		this.tags = tags;
	}

	public List<Comments> getComments() {
		return comments;
	}

	public void setComments(List<Comments> comments) {
		this.comments = comments;
	}

	public User getAssignee() {
		return assignee;
	}

	public void setAssignee(User assignee) {
		this.assignee = assignee;
	}

	public Project getProject() {
		return project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	public List<User> getTeam() {
		return team;
	}

	public void setTeam(List<User> team) {
		this.team = team;
	}

	@Override
	public int hashCode() {
		return Objects.hash(assignee, comments, description, dueDate, id, priority, project, projectID, status, tags,
				team, title);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Issues other = (Issues) obj;
		return Objects.equals(assignee, other.assignee) && Objects.equals(comments, other.comments)
				&& Objects.equals(description, other.description) && Objects.equals(dueDate, other.dueDate)
				&& Objects.equals(id, other.id) && Objects.equals(priority, other.priority)
				&& Objects.equals(project, other.project) && Objects.equals(projectID, other.projectID)
				&& Objects.equals(status, other.status) && Objects.equals(tags, other.tags)
				&& Objects.equals(team, other.team) && Objects.equals(title, other.title);
	}

	@Override
	public String toString() {
		return "Issues [id=" + id + ", title=" + title + ", description=" + description + ", status=" + status
				+ ", priority=" + priority + ", projectID=" + projectID + ", dueDate=" + dueDate + ", tags=" + tags
				+ ", comments=" + comments + ", assignee=" + assignee + ", project=" + project + ", team=" + team + "]";
	}

	
	
	
}
